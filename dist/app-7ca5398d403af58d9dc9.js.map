{"version":3,"file":"app-7ca5398d403af58d9dc9.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA,iEAAe,IAAI;;;;;;;;;;;ACHnB;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;ACNsB;AACA;;;AAGtB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kBAAkB;AAClB,UAAU;AACV;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;AAIA;AACA;AACA,CAAC;;;;;AAKD;AACA;AACA;AACA;;;;AAIA;AACA;AACA;;;AAGA;AACA,4BAA4B,UAAU;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,UAAU;AACtC,gCAAgC,aAAa;AAC7C;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,yBAAyB,QAAQ;AACjC;AACA,+BAA+B,aAAa;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qCAAqC;AACrC,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA,kCAAkC;AAClC;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA,iEAAiE;AACjE;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,IAAI,GAAG,IAAI;AACjE;AACA;;AAEA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;;;;AAIA;;AAEA;AACA,mCAAmC;AACnC,sCAAsC;AACtC,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA","sources":["webpack://hw_10_lifesimulator_js/./src/index.html","webpack://hw_10_lifesimulator_js/./src/index.scss?fabf","webpack://hw_10_lifesimulator_js/webpack/bootstrap","webpack://hw_10_lifesimulator_js/webpack/runtime/define property getters","webpack://hw_10_lifesimulator_js/webpack/runtime/hasOwnProperty shorthand","webpack://hw_10_lifesimulator_js/webpack/runtime/make namespace object","webpack://hw_10_lifesimulator_js/./src/index.js"],"sourcesContent":["// Module\nvar code = \"<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n<head>\\n    <meta charset=\\\"UTF-8\\\">\\n    <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=edge\\\">\\n    <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\\n    <title>Game of life</title>\\n</head>\\n<body>\\n    <div class=\\\"cont\\\">\\n        \\n        <div class=\\\"modalWindow\\\"></div>\\n\\n        <h1 id=\\\"title\\\">Игра \\\"Жизнь\\\"</h1>\\n        <div id=\\\"world\\\"></div>\\n        <h2 class=\\\"subTitle\\\">Правила игры:</h2>\\n        <ol class=\\\"navPanel\\\">\\n            <li class=\\\"navPanel__li\\\">Задайте ширину и высоту поля для игры и нажмите кнопку \\\"Создать\\\"</li>\\n            <li class=\\\"navPanel__li\\\">Нажмите на клетку чтобы сделать ее живой</li>\\n            <li class=\\\"navPanel__li\\\">Нажмите на кнопку \\\"Начать игру!\\\" чтобы запустить игру и ее раз нажмите для паузы</li>\\n            <li class=\\\"navPanel__li\\\">Нажмите на кнопку \\\"Сброс\\\" для сброса игры</li>\\n        </ol>\\n        <div class=\\\"navButtons\\\">\\n            <h3 class=\\\"subTitle\\\">Панель навигации</h3>\\n            <nav class=\\\"navButtons__panel\\\">\\n                <div class=\\\"navButtons__buttons\\\">\\n                    <button id=\\\"startBtn\\\" class=\\\"hoverCursor\\\">Начать игру!</button>\\n                    <button id=\\\"reset\\\" class=\\\"hoveroursor\\\">Сброс</button>\\n                </div>\\n        \\n                <div>\\n                    <label for=\\\"speed\\\" id=\\\"evolutionSpeedTitle\\\">Скорость эволюции</label>\\n                    <input type=\\\"range\\\" name=\\\"speed\\\" id=\\\"speed\\\" min=\\\"300\\\" max=\\\"3000\\\" step=\\\"100\\\" class=\\\"hoverCursor\\\">\\n                </div>\\n            </nav>\\n            \\n        </div>\\n        <div class=\\\"initParamsBox\\\">\\n            <form method=\\\"get\\\">\\n                <div>\\n                    <input type=\\\"number\\\" name=\\\"row\\\" class=\\\"initNumbers\\\" id=\\\"row\\\" min=\\\"10\\\" max=\\\"50\\\" placeholder=\\\"Ширина\\\">\\n                    <input type=\\\"number\\\" name=\\\"column\\\" class=\\\"initNumbers\\\" id=\\\"column\\\" min=\\\"10\\\" max=\\\"50\\\" placeholder=\\\"Высота\\\">\\n                </div>\\n                <input type=\\\"button\\\" value=\\\"Создать мир\\\" name=\\\"submit\\\" id=\\\"sub\\\" class=\\\"hoverCursor\\\">\\n            </form>\\n        </div>\\n        <footer class=\\\"footer\\\">\\n            All Rights reserved\\n        </footer>\\n    </div>\\n</body>\\n</html>\";\n// Exports\nexport default code;","// extracted by mini-css-extract-plugin\nexport {};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import './index.html'; \nimport './index.scss';\n\n\nlet rows;\nlet columns;\n\nlet world = document.querySelector('#world');\nconst startBtn = document.querySelector('#startBtn');\nconst resetBtn = document.querySelector('#reset');\n\nconst navButtons = document.querySelector('.navButtons');\nconst initParamsBox = document.querySelector('.initParamsBox');\n\nconst mediaQuery320 = window.matchMedia('(min-width: 320px)')\nconst mediaQuery425 = window.matchMedia('(min-width: 425px)')\nconst mediaQuery768 = window.matchMedia('(min-width: 768px)')\nconst mediaQuery1024 = window.matchMedia('(min-width: 1024px)')\n\nlet started=false;// Set to true when use clicks start\nlet timer;//To control evolutions\nlet lifeSpeed = document.querySelector('#speed');\nlet lifeSpeedValue = 1000;\n\nconst modalWindowErrors = document.querySelector('.modalWindow');\n\nfunction showModalErrors(textError){\n    modalWindowErrors.style.top = \"6px\";\n    modalWindowErrors.innerHTML = textError;\n}\nfunction closeModal(){\n    modalWindowErrors.style.top = \"-50px\";\n}\n\nfunction commonFunc(textError){\n    showModalErrors(textError);\n    setTimeout(()=>{\n        closeModal()\n    },2000);\n}\n\nconst userRow = document.querySelector('#row');\nconst userColumn = document.querySelector('#column');\nconst sub = document.querySelector('#sub');\n\nsub.addEventListener('click', () => {\n\n\n    let userRowValue = userRow.value;\n    let userColumnValue = userColumn.value;\n\n    if(mediaQuery320.matches && !mediaQuery425.matches && !mediaQuery768.matches && !mediaQuery1024.matches){\n        console.log('MODILE: 320 to 424');\n        if(!Number(isNaN(userRowValue)) && userRowValue != '' && userRowValue >= 8 && userRowValue <=13){\n\n            rows = userRowValue;\n        }\n        if(!Number(isNaN(userColumnValue)) && userColumnValue != ''  && userColumnValue >= 8 && userColumnValue <=13){\n    \n            columns = userColumnValue;\n        }\n        else{\n            commonFunc('Ширина и высота должны быть от 8 до 13')\n        }\n    }\n    else if(mediaQuery320.matches && mediaQuery425.matches && !mediaQuery768.matches && !mediaQuery1024.matches){\n        console.log('TABLET: 425 to 767');\n        if(!Number(isNaN(userRowValue)) && userRowValue != '' && userRowValue >= 10 && userRowValue <= 17){\n\n            rows = userRowValue;\n        }\n        if(!Number(isNaN(userColumnValue)) && userColumnValue != ''  && userColumnValue >= 10 && userColumnValue <= 17){\n    \n            columns = userColumnValue;\n        }\n        else{\n            commonFunc('Ширина и высота должны быть от 10 до 17')\n        }\n    }\n    else if(mediaQuery320.matches && mediaQuery425.matches && mediaQuery768.matches && !mediaQuery1024.matches){\n        console.log('LITLE DESKTOP: 768 to 1023');\n        if(!Number(isNaN(userRowValue)) && userRowValue != '' && userRowValue >= 15 && userRowValue <= 23){\n\n            rows = userRowValue;\n        }\n        if(!Number(isNaN(userColumnValue)) && userColumnValue != ''  && userColumnValue >= 15 && userColumnValue <= 23){\n    \n            columns = userColumnValue;\n        }\n        else{\n            commonFunc('Ширина и высота должны быть от 15 до 23')\n        }\n    } \n    else if(mediaQuery320.matches && mediaQuery425.matches && mediaQuery768.matches && mediaQuery1024.matches){\n        console.log('LITLE DESKTOP: 768 to 1023');\n        if(!Number(isNaN(userRowValue)) && userRowValue != '' && userRowValue >= 15 && userRowValue <= 27){\n\n            rows = userRowValue;\n        }\n        if(!Number(isNaN(userColumnValue)) && userColumnValue != ''  && userColumnValue >= 15 && userColumnValue <= 27){\n    \n            columns = userColumnValue;\n        }\n        else{\n            commonFunc('Ширина и высота должны быть от 15 до 27')\n        }\n    } \n    \n\n    if(rows && columns){\n        navButtons.style.display = 'block';\n        initParamsBox.style.display = 'none';\n        beginWorld();\n\n\n\n    }\n    \n})\n\n\n\n\n        // Function that change speed\n        lifeSpeed.onchange = () => {\n            lifeSpeedValue = lifeSpeed.value;\n        }\n\n\n\n        // create 2D Arrays\n        let currentGeneration = [rows];\n        let nextGeneration = [rows];\n\n\n        function createGenerationArrays(){\n            for (let i = 0; i < rows; i++) {\n                currentGeneration[i] = new Array(columns);\n                nextGeneration[i] = new Array(columns);\n                \n            }\n        }\n        function initialGenerationArrays(){\n            for (let i = 0; i < rows; i++) {\n                for (let k = 0; k < columns; k++) {\n                    currentGeneration[i][k] = 0;\n                    nextGeneration[i][k] = 0;\n                }\n            }\n        }\n\n\n        // Create world by tables\n        function createWorld(){\n            let table = document.createElement('table');\n            table.setAttribute('id', 'worldGrid');\n            for(let i=0; i<rows; i++){\n                let tr = document.createElement('tr');\n                for(let k = 0; k < columns; k++){\n                    let cell = document.createElement('td');\n                    cell.setAttribute('id', i + '_' + k);\n                    cell.setAttribute('class', 'dead');\n                    tr.appendChild(cell);\n                }\n                table.appendChild(tr);\n            }\n            world.appendChild(table);\n            world.addEventListener('click', cellClick);\n            \n        }\n\n        // addEventListener\n        function cellClick(data) {\n            let loc = data.target.id.split(\"_\");\n            // console.log(loc);\n            let row = Number(loc[0]);//Get i\n            let col = Number(loc[1]);//Get j\n            // Toggle cell alive or dead\n            if(data.target.localName==='td'){\n                if (data.target.className==='alive'){\n                    data.target.setAttribute('class', 'dead');\n                    currentGeneration[row][col] = 0;\n                }\n                else{\n                    data.target.setAttribute('class', 'alive');\n                    currentGeneration[row][col] = 1;\n                }\n            }\n        }\n\n\n\n        // Cheking for neighbors and expect the rules\n        function getNeighborsCounter(row, col) {\n            let count = 0;\n            let nrow=Number(row);\n            let ncol=Number(col);\n            \n                // Make sure we are not at the first row\n                if (nrow - 1 >= 0) {\n                // Check top neighbor\n                if (currentGeneration[nrow - 1][ncol] == 1) \n                    count++;\n            }\n                // Make sure we are not in the first cell\n                // Upper left corner\n                if (nrow - 1 >= 0 && ncol - 1 >= 0) {\n                //Check upper left neighbor\n                if (currentGeneration[nrow - 1][ncol - 1] == 1) \n                    count++;\n            }\n        // Make sure we are not on the first row last column\n                // Upper right corner\n                if (nrow - 1 >= 0 && ncol + 1 < columns) {\n                //Check upper right neighbor\n                    if (currentGeneration[nrow - 1][ncol + 1] == 1) \n                        count++;\n                }\n        // Make sure we are not on the first column\n            if (ncol - 1 >= 0) {\n                //Check left neighbor\n                if (currentGeneration[nrow][ncol - 1] == 1) \n                    count++;\n            }\n            // Make sure we are not on the last column\n            if (ncol + 1 < columns) {\n                //Check right neighbor\n                if (currentGeneration[nrow][ncol + 1] == 1) \n                    count++;\n            }\n        // Make sure we are not on the bottom left corner\n            if (nrow + 1 < rows && ncol - 1 >= 0) {\n                //Check bottom left neighbor\n                if (currentGeneration[nrow + 1][ncol - 1] == 1) \n                    count++;\n            }\n        // Make sure we are not on the bottom right\n            if (nrow + 1 < rows && ncol + 1 < columns) {\n                //Check bottom right neighbor\n                if (currentGeneration[nrow + 1][ncol + 1] == 1) \n                    count++;\n            }\n            \n            \n                // Make sure we are not on the last row\n            if (nrow + 1 < rows) {\n                //Check bottom neighbor\n                if (currentGeneration[nrow + 1][ncol] == 1) \n                    count++;\n            }\n            \n            \n            return count;\n        }\n\n                // Define conditions of cell\n                function createNextGeneration() {\n                    for (row in currentGeneration) {\n                        for (col in currentGeneration[row]) {\n                        \n                            let neighbors = getNeighborsCounter(row, col);\n                        \n                            // Check the rules\n                            // If Alive\n                            if (currentGeneration[row][col] == 1) {\n                            \n                                if (neighbors < 2) {\n                                    nextGeneration[row][col] = 0;\n                                } else if (neighbors == 2 || neighbors == 3) {\n                                    nextGeneration[row][col] = 1;\n                                } else if (neighbors > 3) {\n                                    nextGeneration[row][col] = 0;\n                                }\n                            } else if (currentGeneration[row][col] == 0) {\n                                // If Dead or Empty\n                            \n                                if (neighbors == 3) {\n                                    // Propogate the species\n                                    nextGeneration[row][col] = 1;//Birth?\n                                }\n                            }\n                        }\n                    }\n                }\n\n        // \n\n        function updateCurrentGeneration() {\n            \n            for (row in currentGeneration) {\n                for (col in currentGeneration[row]) {\n                    // Update the current generation with\n                    // the results of createNextGen function\n                    currentGeneration[row][col] = nextGeneration[row][col];\n                    // Set nextGen back to empty\n                    nextGeneration[row][col] = 0;\n                }\n            }\n        \n        }\n        function updateWorld() {\n            let cell='';\n            for (row in currentGeneration) {\n                for (col in currentGeneration[row]) {\n                    // cell = document.getElementById(row + '_' + col);\n                    cell = document.getElementById(`${row}_${col}`);\n                    if (currentGeneration[row][col] == 0) {\n                        cell.setAttribute('class', 'dead');\n\n                    } else {\n                        cell.setAttribute('class', 'alive');\n                    }\n                }\n            }\n        }\n\n\n\n        // create startLife fucntion\n\n        function startLife(){\n            createNextGeneration();//Apply the rules\n            updateCurrentGeneration();//Set Current values from new generation\n            updateWorld();//Update the world view\n            // check()\n            if(started){\n                timer = (setTimeout(startLife, lifeSpeedValue));\n                // setTimeout(check, lifeSpeedValue)\n            }\n\n        }\n\n\n        // Function start and stop life\n        function startAndStop(){\n            if(!started){\n                started = true;\n                startBtn.innerText = 'Остановить игры';\n                startLife();\n            } else {\n                started = false;\n                startBtn.innerText = 'Начать игру!';\n                clearTimeout(timer);\n                \n            }\n\n        }\n\n        // reload page ande reset data\n        function resetData(){\n            window.location.reload();\n            navButtons.style.display = 'none';\n            initParamsBox.style.display = 'block';\n        }\n\n        startBtn.addEventListener('click', startAndStop);\n        resetBtn.addEventListener('click', resetData);\n\n\n        function beginWorld(){\n            createWorld();\n            createGenerationArrays();\n            initialGenerationArrays();\n        }\n"],"names":[],"sourceRoot":""}