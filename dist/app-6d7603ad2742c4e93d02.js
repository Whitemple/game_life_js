(()=>{"use strict";var __webpack_modules__={138:()=>{eval(" \n\n\n\nlet rows;\nlet columns;\n\nlet world = document.querySelector('#world');\nconst startBtn = document.querySelector('#startBtn');\nconst resetBtn = document.querySelector('#reset');\n\nconst navButtons = document.querySelector('.navButtons');\nconst initParamsBox = document.querySelector('.initParamsBox');\n\nconst mediaQuery320 = window.matchMedia('(min-width: 320px)')\nconst mediaQuery425 = window.matchMedia('(min-width: 425px)')\nconst mediaQuery768 = window.matchMedia('(min-width: 768px)')\nconst mediaQuery1024 = window.matchMedia('(min-width: 1024px)')\n\nlet started=false;// Set to true when use clicks start\nlet timer;//To control evolutions\nlet lifeSpeed = document.querySelector('#speed');\nlet lifeSpeedValue = 1000;\n\nconst modalWindowErrors = document.querySelector('.modalWindow');\n\nfunction showModalErrors(textError){\n    modalWindowErrors.style.top = \"6px\";\n    modalWindowErrors.innerHTML = textError;\n}\nfunction closeModal(){\n    modalWindowErrors.style.top = \"-50px\";\n}\n\nfunction commonFunc(textError){\n    showModalErrors(textError);\n    setTimeout(()=>{\n        closeModal()\n    },2000);\n}\n\nconst userRow = document.querySelector('#row');\nconst userColumn = document.querySelector('#column');\nconst sub = document.querySelector('#sub');\n\nsub.addEventListener('click', () => {\n\n\n    let userRowValue = userRow.value;\n    let userColumnValue = userColumn.value;\n\n    if(mediaQuery320.matches && !mediaQuery425.matches && !mediaQuery768.matches && !mediaQuery1024.matches){\n        console.log('MODILE: 320 to 424');\n        if(!Number(isNaN(userRowValue)) && userRowValue != '' && userRowValue >= 8 && userRowValue <=13){\n\n            rows = userRowValue;\n        }\n        if(!Number(isNaN(userColumnValue)) && userColumnValue != ''  && userColumnValue >= 8 && userColumnValue <=13){\n    \n            columns = userColumnValue;\n        }\n        else{\n            commonFunc('Ширина и высота должны быть от 8 до 13')\n        }\n    }\n    else if(mediaQuery320.matches && mediaQuery425.matches && !mediaQuery768.matches && !mediaQuery1024.matches){\n        console.log('TABLET: 425 to 767');\n        if(!Number(isNaN(userRowValue)) && userRowValue != '' && userRowValue >= 10 && userRowValue <= 17){\n\n            rows = userRowValue;\n        }\n        if(!Number(isNaN(userColumnValue)) && userColumnValue != ''  && userColumnValue >= 10 && userColumnValue <= 17){\n    \n            columns = userColumnValue;\n        }\n        else{\n            commonFunc('Ширина и высота должны быть от 10 до 17')\n        }\n    }\n    else if(mediaQuery320.matches && mediaQuery425.matches && mediaQuery768.matches && !mediaQuery1024.matches){\n        console.log('LITLE DESKTOP: 768 to 1023');\n        if(!Number(isNaN(userRowValue)) && userRowValue != '' && userRowValue >= 15 && userRowValue <= 23){\n\n            rows = userRowValue;\n        }\n        if(!Number(isNaN(userColumnValue)) && userColumnValue != ''  && userColumnValue >= 15 && userColumnValue <= 23){\n    \n            columns = userColumnValue;\n        }\n        else{\n            commonFunc('Ширина и высота должны быть от 15 до 23')\n        }\n    } \n    else if(mediaQuery320.matches && mediaQuery425.matches && mediaQuery768.matches && mediaQuery1024.matches){\n        console.log('LITLE DESKTOP: 768 to 1023');\n        if(!Number(isNaN(userRowValue)) && userRowValue != '' && userRowValue >= 15 && userRowValue <= 27){\n\n            rows = userRowValue;\n        }\n        if(!Number(isNaN(userColumnValue)) && userColumnValue != ''  && userColumnValue >= 15 && userColumnValue <= 27){\n    \n            columns = userColumnValue;\n        }\n        else{\n            commonFunc('Ширина и высота должны быть от 15 до 27')\n        }\n    } \n    \n\n    if(rows && columns){\n        navButtons.style.display = 'block';\n        initParamsBox.style.display = 'none';\n        beginWorld();\n\n\n\n    }\n    \n})\n\n\n\n\n        // Function that change speed\n        lifeSpeed.onchange = () => {\n            lifeSpeedValue = lifeSpeed.value;\n        }\n\n\n\n        // create 2D Arrays\n        let currentGeneration = [rows];\n        let nextGeneration = [rows];\n\n\n        function createGenerationArrays(){\n            for (let i = 0; i < rows; i++) {\n                currentGeneration[i] = new Array(columns);\n                nextGeneration[i] = new Array(columns);\n                \n            }\n        }\n        function initialGenerationArrays(){\n            for (let i = 0; i < rows; i++) {\n                for (let k = 0; k < columns; k++) {\n                    currentGeneration[i][k] = 0;\n                    nextGeneration[i][k] = 0;\n                }\n            }\n        }\n\n\n        // Create world by tables\n        function createWorld(){\n            let table = document.createElement('table');\n            table.setAttribute('id', 'worldGrid');\n            for(let i=0; i<rows; i++){\n                let tr = document.createElement('tr');\n                for(let k = 0; k < columns; k++){\n                    let cell = document.createElement('td');\n                    cell.setAttribute('id', i + '_' + k);\n                    cell.setAttribute('class', 'dead');\n                    tr.appendChild(cell);\n                }\n                table.appendChild(tr);\n            }\n            world.appendChild(table);\n            world.addEventListener('click', cellClick);\n            \n        }\n\n        // addEventListener\n        function cellClick(data) {\n            let loc = data.target.id.split(\"_\");\n            // console.log(loc);\n            let row = Number(loc[0]);//Get i\n            let col = Number(loc[1]);//Get j\n            // Toggle cell alive or dead\n            if(data.target.localName==='td'){\n                if (data.target.className==='alive'){\n                    data.target.setAttribute('class', 'dead');\n                    currentGeneration[row][col] = 0;\n                }\n                else{\n                    data.target.setAttribute('class', 'alive');\n                    currentGeneration[row][col] = 1;\n                }\n            }\n        }\n\n\n\n        // Cheking for neighbors and expect the rules\n        function getNeighborsCounter(row, col) {\n            let count = 0;\n            let nrow=Number(row);\n            let ncol=Number(col);\n            \n                // Make sure we are not at the first row\n                if (nrow - 1 >= 0) {\n                // Check top neighbor\n                if (currentGeneration[nrow - 1][ncol] == 1) \n                    count++;\n            }\n                // Make sure we are not in the first cell\n                // Upper left corner\n                if (nrow - 1 >= 0 && ncol - 1 >= 0) {\n                //Check upper left neighbor\n                if (currentGeneration[nrow - 1][ncol - 1] == 1) \n                    count++;\n            }\n        // Make sure we are not on the first row last column\n                // Upper right corner\n                if (nrow - 1 >= 0 && ncol + 1 < columns) {\n                //Check upper right neighbor\n                    if (currentGeneration[nrow - 1][ncol + 1] == 1) \n                        count++;\n                }\n        // Make sure we are not on the first column\n            if (ncol - 1 >= 0) {\n                //Check left neighbor\n                if (currentGeneration[nrow][ncol - 1] == 1) \n                    count++;\n            }\n            // Make sure we are not on the last column\n            if (ncol + 1 < columns) {\n                //Check right neighbor\n                if (currentGeneration[nrow][ncol + 1] == 1) \n                    count++;\n            }\n        // Make sure we are not on the bottom left corner\n            if (nrow + 1 < rows && ncol - 1 >= 0) {\n                //Check bottom left neighbor\n                if (currentGeneration[nrow + 1][ncol - 1] == 1) \n                    count++;\n            }\n        // Make sure we are not on the bottom right\n            if (nrow + 1 < rows && ncol + 1 < columns) {\n                //Check bottom right neighbor\n                if (currentGeneration[nrow + 1][ncol + 1] == 1) \n                    count++;\n            }\n            \n            \n                // Make sure we are not on the last row\n            if (nrow + 1 < rows) {\n                //Check bottom neighbor\n                if (currentGeneration[nrow + 1][ncol] == 1) \n                    count++;\n            }\n            \n            \n            return count;\n        }\n\n                // Define conditions of cell\n                function createNextGeneration() {\n                    for (row in currentGeneration) {\n                        for (col in currentGeneration[row]) {\n                        \n                            let neighbors = getNeighborsCounter(row, col);\n                        \n                            // Check the rules\n                            // If Alive\n                            if (currentGeneration[row][col] == 1) {\n                            \n                                if (neighbors < 2) {\n                                    nextGeneration[row][col] = 0;\n                                } else if (neighbors == 2 || neighbors == 3) {\n                                    nextGeneration[row][col] = 1;\n                                } else if (neighbors > 3) {\n                                    nextGeneration[row][col] = 0;\n                                }\n                            } else if (currentGeneration[row][col] == 0) {\n                                // If Dead or Empty\n                            \n                                if (neighbors == 3) {\n                                    // Propogate the species\n                                    nextGeneration[row][col] = 1;//Birth?\n                                }\n                            }\n                        }\n                    }\n                }\n\n        // \n\n        function updateCurrentGeneration() {\n            \n            for (row in currentGeneration) {\n                for (col in currentGeneration[row]) {\n                    // Update the current generation with\n                    // the results of createNextGen function\n                    currentGeneration[row][col] = nextGeneration[row][col];\n                    // Set nextGen back to empty\n                    nextGeneration[row][col] = 0;\n                }\n            }\n        \n        }\n        function updateWorld() {\n            let cell='';\n            for (row in currentGeneration) {\n                for (col in currentGeneration[row]) {\n                    // cell = document.getElementById(row + '_' + col);\n                    cell = document.getElementById(`${row}_${col}`);\n                    if (currentGeneration[row][col] == 0) {\n                        cell.setAttribute('class', 'dead');\n\n                    } else {\n                        cell.setAttribute('class', 'alive');\n                    }\n                }\n            }\n        }\n\n\n\n        // create startLife fucntion\n\n        function startLife(){\n            createNextGeneration();//Apply the rules\n            updateCurrentGeneration();//Set Current values from new generation\n            updateWorld();//Update the world view\n            // check()\n            if(started){\n                timer = (setTimeout(startLife, lifeSpeedValue));\n                // setTimeout(check, lifeSpeedValue)\n            }\n\n        }\n\n\n        // Function start and stop life\n        function startAndStop(){\n            if(!started){\n                started = true;\n                startBtn.innerText = 'Остановить игры';\n                startLife();\n            } else {\n                started = false;\n                startBtn.innerText = 'Начать игру!';\n                clearTimeout(timer);\n                \n            }\n\n        }\n\n        // reload page ande reset data\n        function resetData(){\n            window.location.reload();\n            navButtons.style.display = 'none';\n            initParamsBox.style.display = 'block';\n        }\n\n        startBtn.addEventListener('click', startAndStop);\n        resetBtn.addEventListener('click', resetData);\n\n\n        function beginWorld(){\n            createWorld();\n            createGenerationArrays();\n            initialGenerationArrays();\n        }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///138\n")}},__webpack_exports__={};__webpack_modules__[138]()})();